import{_ as l,W as i,X as e,a0 as a}from"./framework-16b96b76.js";const r={},o=a('<h1 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h1><h2 id="大纲" tabindex="-1"><a class="header-anchor" href="#大纲" aria-hidden="true">#</a> 大纲</h2><ul><li>架构图（Server层和存储引擎层） <ul><li>Server层组件及其各自作用、binlog数据组织形式、读写分离实现及其原理</li><li>存储引擎层的分类，MyISM与InnoDB的区别（事务支持上、数据组织形式上）</li></ul></li><li>特殊SQL的使用 <ul><li>join 等</li></ul></li><li>InnoDB存储引擎 <ul><li>内存部分 <ul><li>Buffer Pool （包括 change pool）</li><li>Log Buffer （undo log 和 redo log）</li></ul></li><li>磁盘部分 <ul><li>行结构，行与行之间的组织形式</li><li>页结构，页与页之间的组织形式</li><li>表空间</li><li>索引（分类、数据结构、失效原因、最佳实践）</li></ul></li><li>线程模型</li><li>事务及其特性、并发一致性问题、隔离级别及其实现 <ul><li>封锁协议</li><li>MVCC</li></ul></li></ul></li><li>一条SQL语句的执行过程</li><li>数据库基准测试、性能监控及调优、SQL调优</li><li>分库分表 <ul><li>发展历程（SQL调优、加缓存、分库分表）</li><li>分库分表 <ul><li>问题及解决方案（全局唯一id、查询类、数据迁移）</li></ul></li></ul></li></ul><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2>',4),n=[o];function u(t,d){return i(),e("div",null,n)}const s=l(r,[["render",u],["__file","mysql.html.vue"]]);export{s as default};
